/** jQuery Mobile Framework : multiview plugin **/

/* WRAPPER */ 
body 											{ margin: 0px; width: inherit; overflow-y: auto !important;}
div[data-wrapper="true"] 						{ margin: 0px; padding: 0px; width: inherit; /* height: inherit; */}
.ui-mobile-viewport								{ height: inherit; }
/* NOTE: not sure whether width: inherit/height:inherit works across browsers and whether it's still necessary
 * Originally both rules were included to make sure dimensions are passed correctly, because JQM only has
 * body>page, while the plugin needs to pass dimensions body>wrapper>panel>pages and panels had none or
 * incorrect dimensions to pass on to nested pages.  
 
/* JQM 1.1 RC2: 	removed height: inherit, because brakes fixed footer positioning */


/* HEADER - optional - Wrappers can contain any number of buttons, controlgroups and from elements and align nicely. */
.ui-header 										{ height: 41px;}
.headWrapLeft > *, .headWrapRight > * 			{ display: inline-block; margin: 0; vertical-align: top; }
.headWrapLeft a.ui-btn, .headWrapRight  a.ui-btn 	{ top: 0px; -moz-box-shadow: none; -webkit-box-shadow: none; box-shadow: none; }
.ui-fullscreen-mode .headWrapLeft a.ui-btn .ui-icon, .ui-fullscreen-mode  .headWrapRight  a.ui-btn .ui-icon { margin: 0px; }

/* BUTTONS - optional - Increase padding for icon-only buttons - just too difficult to click them */
.ui-btn-icon-notext								{ height: 28px; width: 28px; }
.ui-btn-icon-notext .ui-btn-inner 				{ padding: 4px 5px 4px 5px; }	
.ui-controlgroup-horizontal .ui-btn, .ui-controlgroup-horizontal .ui-select 
												{ vertical-align: middle; }	
											
/* PANEL DIMENSIONS */
.ui-content                      							{ overflow: visible; }
.ui-fullscreen-mode .ui-content					{ overflow-x: hidden !important; /* padding: 15px !important;*/ }

.ui-panel-left 									{ z-index: 55; float: left; position: static; /* relative */ }
.ui-panel-left .ui-page							{ z-index:1055; min-width: inherit; /* box-shadow: 0 0 12px rgba(0, 0, 0, 0.6);	*/ }
/* NOTE: pos:rel on the panel is necessary to hide transitions. If pos:stat is used, you can see the page being pulled up on top of the main panel before sliding over 
 * this does not work anymore with JQM 1.1, because toolbars switching between pos:fix and pos:abs, thereby messing up the layout */

/* JQM 1.1 RC2: 	back to pos:static to avoid breaking layout in pos:fix mode - see if this works */			
.ui-panel-mid									{ z-index: 50; float: left; position: static; }
.ui-panel-mid .ui-page							{ z-index:1050; min-width: inherit; }
.ui-panel-right 									{ z-index: 45; right: 0; }
.ui-panel-right .ui-page 						{ right: 0; }

.ui-splitview-hidden { 
	display:none; 
}
.menuToggle	{ 
	position: absolute; 
}

.dataTables_filter.ui-menu-button-flex .menuToggle {
	position: static;
	display: inline-block;
	float: none; 
	margin: 2px 0.25em !important;
}

.ui-panel-border-right .ui-page	{ 
	/* margin-left: -1px; */
	/* JQM 1.1 RC2: 	when using fix toolbars, pos:fix mode shifts header by 1px, see if this works cross device */
	border-right: 1px solid #000000; 
	
}
.ui-panel-border-left .ui-page { 
	/* margin-right: -1px; */
	/* JQM 1.1 RC2: 	when using fix toolbars, pos:fix mode shifts header by 1px, see if this works cross device */
	border-left: 1px solid #000000;
	
}
									
											
											
											
/** popovers **/
.ui-popover .ui-page                         				{ bottom: 0; /* makes popover pages content expand to the full available width... on iPad */ }
.ui-popover .ui-page-active						{ min-height: inherit !important;}
.ui-popover-mode div.ui-popover, .ui-splitview-mode div.ui-panel {
	overflow-x: visible; 
	/*
	 need to override this to hide menu-scrollbars in splitview mode
	   and make popover triangles to re-appear. As this is needs to be
	   'hidden' for Android select menu (only?), it should be ok 
	   on Android smartphones, as this would be fullscreen mode. 	   
	   */	   
}		
/* popover css for portrait orientation, modified from http://www.cagintranet.com/archive/create-an-ipad-like-dropdown-popover/ */
.ui-popover { 
	position:  absolute; 	
	z-index:1005 !important; /* need important, otherwise CSS3 transition change overrides to z-index 10 during transition */
	color: black; 
	font-weight: normal; 
	line-height: 1;
	cursor: auto;
	background-color: black; 
	border: 3px solid black; 
	border-radius: 4px;
	-webkit-border-radius: 4px;
	-moz-border-radius: 4px;
	border-radius: 4px;
	-webkit-box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
	-webkit-transition: opacity 0.25s linear;
	-moz-box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
	-moz-transition: opacity 0.25s linear;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
	transition: opacity 0.25s linear;	
	left: auto;
}
.ui-popover .ui-header						{ bottom: auto; left: 0; position: absolute !important; right: 0; top: 0 !important; }
.ui-popover .ui-content        					{ /* overthrow */ height: auto; /* end overthrow */ z-index: 999; bottom: 0; left: 0; overflow-x: hidden !important; overflow-y: visible;  position: absolute !important;right: 0; top: 43px;}

/* button horizontal controlgroup combo DON'T TOUCH!!! */
.ui-controlgroup-btn-notext    				{padding: 0; width: 28px; height: 28.75px !important; vertical-align: middle;}
.ui-controlgroup-btn-notext .ui-btn-inner                
											{height: 15px; padding: 6px 0;}
.ui-controlgroup-btn-notext .ui-btn-inner .ui-icon       
											{left: 3.5px; position: relative; top: -1px;}
.ui-controlgroup-btn-left        				{vertical-align: middle;}

/* popover1 = topleft
-----------------------------------------------------------------------------------------------------------*/
.popover1                             					{display: none; /* why? */ overflow-x:visible !important; /* override on small screens */ height:25em; width: 15em; top: 0em; margin-top: 3.25em; right: 5em;}
.popover1 .popover_triangle  				{right: 0.25em;}

/* popover2 = topright
-----------------------------------------------------------------------------------------------------------*/
.popover2                             					{display: none; /* why? */ overflow-x:visible !important; /* override on small screens */ height:25em; width: 15em; top: 0em; margin-top: 3.25em; right: 0.5em;}
.popover2 .popover_triangle 					{right: 0;}

/* popoverAnywhere
-----------------------------------------------------------------------------------------------------------*/
.popoverAnywhere                            			{display: none; /* why? */ overflow-x:visible; height:25em; width: 15em; top: 1px; margin-top: 15%; right: 40%;}
.popoverAnywhere .popover_triangle 			{right: 0.25em;}

/* menu
-----------------------------------------------------------------------------------------------------------*/
.pop_menuBox  								{display: none; height:25em; width: 15em; top: 0em; margin-top: 3.25em; left: 1em; overflow-x: visible;}
.pop_menuBox .popover_triangle				{top: -32px; z-index: 1051; /* why */}

/* show/hide popovers */
.ui-footer-global							{ z-index: 1100; max-height: 48px; }
.popover-btn								{ position: static; vertical-align: middle; margin: 3px 0 0 5px !important;}
.div[data-panel="popover"] > div[data-role="page"], .div[data-panel="menu"] > div[data-role="page"]
											{ height: inherit; overflow-y: auto; min-height: inherit !important;}	
.tweakMe									{ display: inline-block; }											
											
/* fullscreen mode
-----------------------------------------------------------------------------------------------------------*/											
.ui-panel-hidden {
	/* this way popover panel does not stack up below */
	display: none; 
}
.pop_fullscreen { 
	margin-top: 0px !important; 
	top: 0px !important; 
	left: 0px !important; 
	right: 0px! important; 
	z-index:1005 !important; 
	width: 100% !important; 
	height: 100%;
	/* Alternative to this would be leaving it away = pos:static like JQM body.viewport. However this causes the 
	   panel to stay in the content flow = be positioned after the page content. Panel pages are pulled up using
	   pos:abs, BUT on Android doing like this disables Select-elements, so only way is pos:abs.*/
	position: absolute; 
	overflow: hidden !important;	   	   	   
	}


.ui-fullscreen-mode .ui-panel .ui-page-active {
	z-index: 1010;
}
.ui-fullscreen-mode .ui-panel .ui-page-active .ui-header-fixed {
	z-index: 1011;
}
.ui-fullscreen-mode .ui-footer-fixed {
	z-index: 1025; /* must always be on top!!!*/
}
.ui-fullscreen-mode div.ui-mobile-viewport { 
	overflow-y: auto; /* panels have scrollbar, because they act as viewport if panel is open! overriding body!, hides panel toolbar, question is on mobile devices, how scroll will work*/ 						 
}

.pop_fullscreen .ui-page-active { 
	z-index: 1; /* background-color: #ffffff; necessary to expand page down to bottom on smartphones */
	}
.pop_fullscreen div[data-role="content"] { 
	z-index: 999 !important; 
	bottom: 0; 
	left: 0; 
	overflow-x: hidden; 
	overflow-y: auto; /* must not be scroll!! */	
	right: 0; 
	top: 43px;
	padding-bottom: 50px;
	/* position: absolute !important; this will give two scrollbars on desktop */	
		
}
.ui-triangle-top  .popover_triangle{ 
	position: absolute; 
	top: -32px; 
	font-size: 0px; 
	line-height: 0%; 
	width: 0px; 
	border-top: 16px solid rgba(0,0,0,0); 
	border-left: 16px solid rgba(0,0,0,0); 
	border-right: 16px solid rgba(0,0,0,0);
	border-bottom: 16px solid black;
	}
.ui-triangle-bottom  .popover_triangle { 
	position: absolute; 
	bottom: -34px; 
	font-size: 0px; 
	line-height: 0%; 
	width: 0px; 
	border-bottom: 16px solid rgba(0,0,0,0); 
	border-left: 16px solid rgba(0,0,0,0); 
	border-right: 16px solid rgba(0,0,0,0);
	border-top: 16px solid black;
	}


/* OVERTHROW -   Enable overflow: auto on elements with overthrow class when html element has overthrow class too */
.overthrow-enabled .overthrow 					{ overflow: auto; -webkit-overflow-scrolling: touch; }









